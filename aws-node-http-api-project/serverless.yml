org: blgottshall
app: aws-node-http-api-project
service: aws-node-http-api-project
frameworkVersion: '3'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:Scan"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-customerTable-${sls:stage}

  environment:
    DYNAMODB_CUSTOMER_TABLE: ${self:service}-customerTable-${sls:stage}

functions:
  createCustomer:
    handler: createCustomer.createCustomer # fileName.functionName
    events:
      - httpApi:
          path: / # https://r7mtsl9mt0.execute-api.us-east-1.amazonaws.com/
          method: post

  getCustomers:
    handler: getCustomers.getCustomers
    events:
      - httpApi:
          path: /customers
          method: get

  hello:
    handler: handler.hello # fileName.functionName
    events:
      - httpApi:
          path: / #https://r7mtsl9mt0.execute-api.us-east-1.amazonaws.com/
          method: get

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-customerTable-${sls:stage}
